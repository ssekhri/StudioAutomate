--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _76vFIKjdEeeagptQvCTsXg,_77JU0KjdEeeagptQvCTsXg,_770DMKjdEeeagptQvCTsXg
Element-Name: createAlloyWithoutServices
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _WfVMoK5ZEeeY0sfK_5Qfag
Runtime-Version: 2.2.0.201706152316
Save-Time: 1/24/18, 6:30 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content


// Create a new Alloy default project=
get-menu "File/New/Mobile App Project" | click
with [get-window "New Mobile App Project"] {
   get-table | select Alloy
    get-label -after [get-label "Available Templates:"] | click
    get-button "Next >" | click
    
    get-editbox -after [get-label "Project name:"] | set-text TestAlloyApp
    with [get-group "Project Settings"] {
        get-editbox -after [get-label "App Id:"] | set-text "alloy.appc.smoketests"
        // Get the Ti SDK value from Global Parameter context
        get-combo -after [get-label "Titanium SDK Version:"] | select [get-param "$TI_SDK"]
    }
}
with [get-window "New Mobile App Project" | get-group "Axway Appcelerator Platform Services" 
    | get-button "Enable Axway Appcelerator Platform Services"] {
    	
	if [get-property selected -raw | equals true]
	{
	 	get-window "New Mobile App Project" | get-group "Axway Appcelerator Platform Services" | get-button "Enable Axway Appcelerator Platform Services" | uncheck
	}
}

with [get-window "New Mobile App Project"] {
	get-button Finish | click
}

//Wait until window for New Project creation is closed
loop {
	if [get-window | get-property "getShell().getText()" -raw | eq "New Mobile App Project"] {
		wait 1000
		recur
	}	
}

// Check complete project created and shown in Project Explorer
get-view "Project Explorer" | get-tree | get-property "getItemCount()" | equals 1 | verify-true
with [get-view "Project Explorer" | get-tree] {
    get-item "TestAlloyApp/app" | get-property "getItems().TreeItem[0].getText()" | equals assets | verify-true
    get-item "TestAlloyApp/app" | get-property "getItems().TreeItem[1].getText()" | equals controllers | verify-true
    get-item "TestAlloyApp/app" | get-property "getItems().TreeItem[2].getText()" | equals models | verify-true
    get-item "TestAlloyApp/app" | get-property "getItems().TreeItem[3].getText()" | equals styles | verify-true
    get-item "TestAlloyApp/app" | get-property "getItems().TreeItem[4].getText()" | equals views | verify-true
    get-item "TestAlloyApp/app" | get-property "getItems().TreeItem[5].getText()" | equals "alloy.js" | verify-true
    get-item "TestAlloyApp/app" | get-property "getItems().TreeItem[6].getText()" | equals "config.json" | verify-true
    get-item "TestAlloyApp/app" | get-property "getItems().TreeItem[7].getText()" | equals README | verify-true
    get-item "TestAlloyApp/app" | get-property "getText()" | equals app | verify-true
}

// Check tabs open by default on project creation
with [get-tab-folder -index 2] {
    get-property "pages[0]" | equals "index.xml" | verify-true
    get-property "pages[1]" | equals "TiApp Editor" | verify-true
    get-property activePage | equals "TiApp Editor" | verify-true
}
// Check correct App Id, Ti SDK, Deployment Target
with [get-editor "TiApp Editor"] {
    get-section Application | get-editbox -after [get-label "Application Id:"] | get-property text 
        | equals "alloy.appc.smoketests" | verify-true
    get-section "Build Properties" | get-combo -after [get-label "Titanium SDK:"] | get-property selection 
        | equals [get-param "$TI_SDK"] | verify-true
    with [get-section "Deployment Targets" | get-control Any -index 2] {
        get-property "getChildren().Control[1].getText()" | equals Android | verify-true
        get-property "getChildren().Control[1].getSelection()" | equals true | verify-true
        get-property "getChildren().Control[3].getText()" | equals iPad | verify-true
        get-property "getChildren().Control[3].getSelection()" | equals true | verify-true
        get-property "getChildren().Control[5].getText()" | equals iPhone | verify-true
        get-property "getChildren().Control[5].getSelection()" | equals true | verify-true
        }
        
        // Check no Modules added in TiApp.xml
   with [get-editor "TiApp Editor" | get-section Modules | get-table] {
				get-property  "itemCount" -raw | int | equals 0 | assert-true -message "Assert Failed: Module added without service enabled."
	}
	
	  with [get-section "Axway Appcelerator Platform Services"] {
        
        // Check Appcelerator Platform Services section shows correct organization and all services enabled
        with [get-control Any -index 2] {
            get-property "getTabList().Control[0].getChildren().Control[0].getText()" | equals "Organization:" 
                | verify-true
            get-property "getTabList().Control[0].getChildren().Control[1].getText()" -raw
                | matches [concat "^[\d\D\s]*" [get-param "$APPC_USER_ORG"] "[\d\D\s]*$"] | verify-true
            get-property "getTabList().Control[2].getChildren().Control[0].getText()" 
                | matches "^Axway Appcelerator services are [partially]* enabled$" | verify-true
            get-property "getTabList().Control[2].getChildren().Control[0].isVisible()" | equals true | verify-true
            
            get-property "getTabList().Control[2].getChildren().Control[2].getChildren().Control[1].getText()" 
                | equals "Cloud (<a>Show Keys</a>)" | verify-false
            get-property "getTabList().Control[2].getChildren().Control[2].getChildren().Control[1].getText()" 
                | equals "Cloud" | verify-true
                
          }
       }
    }
	
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
